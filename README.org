* Introduction
This is the source code for a weather station where multiple stations
send wirelessly their data to a dedicated base. The hardware design is
based around the Atmel ATmega88PA, Bosch BMP085, Sensirion SHT75x and
a Davis rain measurement unit. Data transmission is done with the
nRF24L01+.

Currently missing is the hardware schematic and PCB design which will
be added later. It exists at the moment only on bread boards.

The base received all measurements from the stations and gathers them.
These data will be written as JSON to the UART. Currently a
Raspberry PI is connected to the base UART, where a seperate program
parses the JSON data and stores it into a time series database.

* Open points/Todos
** TODO ATmega88PA supports pin toggle natively
#+BEGIN_SRC c
  PINB |= (1 << PINB1); // toggle the I/O port output pin
#+END_SRC

** TODO Clean up wireless high level code 
** TODO Main timer needs higher prescaler
** TODO Order SHT7x Socket Connector
** TODO Use CTC mode for rainsensor coding
** TODO Use 0.2mm in basec. for rainsensor output
** TODO Use error handling with SHT11, BMP085 in main

* Electrical characteristics
|               | U min | U Max | I min/ÂµA | I max/mA |
|---------------+-------+-------+----------+----------|
| ATmega88PA 1) |   1.8 |   5.5 |      0.9 |      2.5 |
| BMP085        |   1.8 |   3.6 |      3.0 |    0.005 |
| SHT7x   2)    |   2.4 |   5.5 |      1.5 |     0.91 |
| nRF24L01+ 3)  |   1.9 |   3.3 |      0.9 |     11.3 |
| MS5611        |   1.8 |   3.6 |     0.14 |   0.0125 |
| NCR18650B     |   2.5 |   4.2 |          |          |

1) With external 32.768 kHz oscillator, which is not actually used
   to drive the system clock, but it is active during power save to
   drive the asynchronous timer to wake the MCU.
2) Needs voltage compensation, i.e. fixed power supply required
3) Needs 3.3V at max, also for input signals (i.e. MCU signals)
